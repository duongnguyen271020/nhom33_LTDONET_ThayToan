@model BookShopOnline_ProjectSem3.Models.Employee

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin.cshtml";
    <link href="~/Content/Admin/css/Profile.css" rel="stylesheet" />
    <script src="~/Content/Admin/js/Profile.js"></script>
}


@*<div class="main-panel">
    <div class="content-wrapper">

        <div class="abc">
            <h2>SETTINGS</h2>
            <div class="tabordion">
                <section id="section1">
                    <input class="t" type="radio" name="sections" id="option1" checked>
                    <label for="option1" class="trr"> Account</label>
                    <article>

                        <div class="frm">

                            <div id='profile-upload'>
                                <div class="hvr-profile-img">


                                    <input type="file" name="logo" id='getval' class="upload" id="imag">

                                    <div class="icon">
                                        <div class="camera4"><span></span></div>
                                    </div>
                                </div>

                            </div>

                            @using (Html.BeginForm("Edit", "ProfileEmp", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div class="tr">
                                    <label class="label" for="input">NAME</label>

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                                    <label class="label" for="input">Email</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                                    <label class="label" for="input">PhoneNumber</label>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })

                                </div>

                                <div>
                                    <label class="label" for="input">Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                                    <label class="label" for="input">Birthday</label>
                                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })

                                    <label class="label" for="input">Gender</label>
                                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>

                            }

                        </div>
                    </article>
                </section>

                <section id="section3">
                    <input class="t" type="radio" name="sections" id="option3">
                    <label for="option3" class="trr">Change Password</label>
                    <article>

                        <div class="tr wwq">
                            <label class="label" for="input">current Password</label>
                            <input class="input e" type="password" id="input">

                            <label class="label" for="input">new password</label>
                            <input class="input e" type="password" id="input">

                            <label class="label" for="input">repeat password</label>
                            <input class="input e" type="password" id="input">
                        </div>
                        <button>Change Password</button>
                    </article>
                </section>

            </div>
        </div>

    </div>

</div>*@

<div class="main-panel">
    <div class="content-wrapper">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Update Your Information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EmployeeID)

                <div class="form-group">
                    @Html.HiddenFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.HiddenFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-outline-success" onclick="showSwal('success-message')" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>



